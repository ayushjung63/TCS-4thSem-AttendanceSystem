🗂️ Entities & Relationships
MasterYear
 -> id, name (e.g., "2024/25")

Semester
 -> id, name (e.g., "First", "Second"), masterYear
 -> many-to-one with MasterYear

Faculty
 -> id, name, description

Subject
 -> id, name, code, semester
 -> Many-to-one with Semester

Student
 -> id, name, email, faculty, semester
 -> Many-to-one with semester, Many-to-one with faculty

Attendance
 -> id, student, subject, date, status (Present/Absent)
 -> Many-to-one with student, Many-to-one with subject

⚙️ Endpoints (REST APIs)
🔹 CRUD APIs
1. /api/master-years
   -> GET, POST, DELETE

2. /api/semesters
   -> CRUD + filter by master year

3. /api/faculties
   -> CRUD

4. /api/subjects
   -> CRUD + filter by semester

5. /api/students
   -> CRUD + filter by faculty/semester/master year

🔹 Attendance API
POST Bulk Attendace :: /api/attendance/bulk
GET  Fetch Attendance By Date & Subject: /api/attendance?date=2025-06-19&subjectId=3

{
id:1,
name:First
masterYearId:1
}




FLOW

CONTROLLER => SERVICE => REPO


CONTROLLER (Entity class) => Service => Repo
CONTROLLER (Dto class) => Service (convert dto to Entity class) => Repo


Master Year -> Faculty -> Semester -> Subject -> Student

1. Choose Master Year ("/api/master-year/list")
2. Filter Semester By Master year Id ("/api/semester/master-year-id/{masterYearId}")
3. Filter Subject by Semester Id ("/api/subject/semester-id/{semesterId}")
4. Filter Student by Semester and Faculty ("/api/student/list/faculty-id/{facultyId}/semester-id/{semesterId}")

after attendance send in request -> list of (subject,student,status(present/absent),date)

[{subject_id,student_id,status,date},{subject_id,student_id,status,date},{subject_id,student_id,status,date},{subject_id,student_id,status,date}]
[{1,1,ABSENT,2025-06-29},{1,2,PRESENT,2025-06-29},{1,3,PRESENT,2025-06-29},{1,4,ABSENT,2025-06-29}]

subject_id, date
{
subject_id:1,
date:2025-06-29
studentList:[{1,ABSENT},{2,PRESENT},{3,PRESENT},{4,ABSENT}]
}

